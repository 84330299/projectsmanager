package com.xxb.web.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import ${package.Service}.${table.serviceName};
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import io.swagger.annotations.ApiOperation;
import com.xxb.web.dto.ResultJson;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import com.xxb.utils.DtoUtil;
import com.xxb.constant.ResultCode;
import com.baomidou.mybatisplus.plugins.Page;
import com.xxb.model.entity.${table.entityName};
import com.xxb.web.dto.${table.entityName}Dto;

#if(${restControllerStyle})
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * @author ${author}
 * @since ${date}
 */
@Api(tags = "${table.name} - Controller")
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
    #if(${superControllerClass})
    public class ${table.controllerName} extends ${superControllerClass} {
    #else
    public class ${table.controllerName} {

    @Autowired
    private ${table.serviceName} i${table.name}Service;

    @ApiOperation(value = "添加 - ${table.name}")
    @PostMapping(value = "insert")
    public ResultJson insert(@RequestBody ${table.entityName}Dto model){
        ${table.entityName} entity=DtoUtil.convertObject(model,${table.entityName}.class);
        boolean flag=i${table.name}Service.insert(entity);
        if(flag){
            return ResultJson.getInstance().setCode(ResultCode.SUCCESS).setMsg(ResultCode.SUCCESS_MSG);
        }else{
            return ResultJson.getInstance().setCode(ResultCode.FAIL).setMsg(ResultCode.FAIL_MSG);
        }
    }

    @ApiOperation(value = "修改 - ${table.name}")
    @PutMapping(value = "up/{id}")
    public ResultJson update(@RequestBody ${table.entityName}Dto model){
    ${table.entityName} entity=DtoUtil.convertObject(model,${table.entityName}.class);
        boolean flag=i${table.name}Service.update(entity,null);
        if(flag){
            return ResultJson.getInstance().setCode(ResultCode.SUCCESS).setMsg(ResultCode.SUCCESS_MSG);
        }else{
            return ResultJson.getInstance().setCode(ResultCode.FAIL).setMsg(ResultCode.FAIL_MSG);
        }
    }

    @ApiOperation(value = "删除 - ${table.name}")
    @DeleteMapping(value = "delete/{id}")
    public ResultJson delete(@PathVariable Integer id){
        boolean flag=i${table.name}Service.deleteById(id);
        if(flag){
            return ResultJson.getInstance().setCode(ResultCode.SUCCESS).setMsg(ResultCode.SUCCESS_MSG);
        }else{
            return ResultJson.getInstance().setCode(ResultCode.FAIL).setMsg(ResultCode.FAIL_MSG);
        }
    }

    @ApiOperation(value = "查询所有 - ${table.name}")
    @GetMapping(value = "query")
    public ResultJson query(){
        Page<${table.entityName}> page=new Page<${table.entityName}>();
        Page<${table.entityName}> list = page.setRecords(i${table.name}Service.selectList(null));
        return ResultJson.getInstance().setCode(ResultCode.SUCCESS).setMsg(ResultCode.SUCCESS_MSG).setData(list);
    }

    #end

}

#end